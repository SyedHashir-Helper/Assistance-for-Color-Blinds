# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QFileDialog
from PyQt5.QtGui import QPixmap
import sys
from PyQt5.QtMultimedia import QMediaPlayer, QMediaContent
from PyQt5.QtMultimediaWidgets import QVideoWidget
import cv2

video = cv2.VideoCapture(0)



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(804, 620)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tabs = QtWidgets.QTabWidget(self.centralwidget)
        self.tabs.setGeometry(QtCore.QRect(0, 0, 801, 581))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabs.sizePolicy().hasHeightForWidth())
        self.tabs.setSizePolicy(sizePolicy)
        self.tabs.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.tabs.setAutoFillBackground(False)
        self.tabs.setStyleSheet("border-color: rgb(45, 45, 45);")
        self.tabs.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabs.setTabShape(QtWidgets.QTabWidget.Triangular)
        self.tabs.setIconSize(QtCore.QSize(25, 25))
        self.tabs.setElideMode(QtCore.Qt.ElideMiddle)
        self.tabs.setUsesScrollButtons(True)
        self.tabs.setDocumentMode(False)
        self.tabs.setTabsClosable(False)
        self.tabs.setMovable(True)
        self.tabs.setTabBarAutoHide(False)
        self.tabs.setObjectName("tabs")
        self.videoTab = QtWidgets.QWidget()
        self.videoTab.setObjectName("videoTab")
        self.graphicsView = QtWidgets.QGraphicsView(self.videoTab)
        self.graphicsView.setGeometry(QtCore.QRect(80, 100, 640, 360))
        self.graphicsView.setStyleSheet("/*box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );*/\n"
"backdrop-filter: blur( 4px );\n"
"/*-webkit-backdrop-filter: blur( 4px );\n"
"border-radius: 10px;\n"
"border: 1px solid rgba( 255, 255, 255, 0.18 );*/\n"
"background-color: rgb(63, 63, 63);\n"
"border-radius: 10px;")
        self.graphicsView.setObjectName("graphicsView")
        ####

        pixmap = QPixmap("play.png")  # Replace "image.jpg" with the path to your image file
        # QtGui.QPixmap.fromImage(image)
        self.scene = QtWidgets.QGraphicsScene()
        self.scene.addPixmap(pixmap)
        self.graphicsView.setScene(self.scene)
        self.graphicsView.show()

        ###
        self.btnForward = QtWidgets.QPushButton(self.videoTab)
        self.btnForward.setGeometry(QtCore.QRect(240, 470, 61, 61))
        self.btnForward.setStyleSheet("border-radius:30px;\n"
"image: url(:/forward/fast-forward.png);\n"
"background-color: rgba(0,0,0,200);\n"
"padding:10px;")
        self.btnForward.setText("")
        self.btnForward.setObjectName("btnForward")
        self.btnForward.clicked.connect(self.btnForwardClicked)
        self.btnBackward = QtWidgets.QPushButton(self.videoTab)
        self.btnBackward.setGeometry(QtCore.QRect(80, 470, 61, 61))
        self.btnBackward.setStyleSheet("border-radius:30px;\n"
"image: url(:/forward/fast-backward.png);\n"
"background-color: rgba(0,0,0,200);\n"
"padding:10px;")
        self.btnBackward.setText("")
        self.btnBackward.setObjectName("btnBackward")
        self.btnForward_2 = QtWidgets.QPushButton(self.videoTab)
        self.btnForward_2.setGeometry(QtCore.QRect(160, 470, 61, 61))
        self.btnForward_2.setStyleSheet("border-radius:30px;\n"
"image: url(:/forward/play.png);\n"
"background-color: rgba(0,0,0,200);\n"
"padding:10px;")
        self.btnForward_2.setText("")
        self.btnForward_2.setObjectName("btnForward_2")
        self.btnForward_2.clicked.connect(self.playPauseButton)
        self.horizontalSlider = QtWidgets.QSlider(self.videoTab)
        self.horizontalSlider.setGeometry(QtCore.QRect(110, 430, 581, 22))
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.cmbxSpeed = QtWidgets.QComboBox(self.videoTab)
        self.cmbxSpeed.setGeometry(QtCore.QRect(590, 470, 131, 51))
        self.cmbxSpeed.setStyleSheet("border-radius: 20px;\n"
"background-color: rgb(56, 56, 56);\n"
"color: rgb(85, 170, 0);")
        self.cmbxSpeed.setEditable(False)
        self.cmbxSpeed.setCurrentText("")
        self.cmbxSpeed.setObjectName("cmbxSpeed")
        self.cmbxSpeed.setObjectName("cmbxSpeed")
        self.cmbxSpeed.addItem("0.5x")
        self.cmbxSpeed.addItem("1.0x")
        self.cmbxSpeed.addItem("1.5x")
        self.cmbxSpeed.addItem("2.0x")
        self.gbFile = QtWidgets.QGroupBox(self.videoTab)
        self.gbFile.setGeometry(QtCore.QRect(60, 70, 681, 491))
        self.gbFile.setStyleSheet("border-color: rgb(0, 170, 0);\n"
"border: 2px solid  rgb(57, 57, 57);\n"
"border-radius: 10px;")
        self.gbFile.setObjectName("gbFile")
        self.txtFileName = QtWidgets.QLineEdit(self.videoTab)
        self.txtFileName.setGeometry(QtCore.QRect(60, 29, 551, 31))
        self.txtFileName.setStyleSheet("border-radius: 10px;\n"
"background-color: rgb(58, 58, 58);\n"
"color: white;")
        self.txtFileName.setObjectName("txtFileName")
        self.btnBrowse = QtWidgets.QPushButton(self.videoTab)
        self.btnBrowse.setGeometry(QtCore.QRect(620, 30, 121, 31))
        self.btnBrowse.clicked.connect(self.openFileDialog)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.btnBrowse.setFont(font)
        self.btnBrowse.setStyleSheet("border-radius: 10px;\n"
"background-color: rgb(65, 65, 65);\n"
"color: white;")
        self.btnBrowse.setObjectName("btnBrowse")
        self.gbFile.raise_()
        self.graphicsView.raise_()
        self.btnForward.raise_()
        self.btnBackward.raise_()
        self.btnForward_2.raise_()
        self.horizontalSlider.raise_()
        self.cmbxSpeed.raise_()
        self.txtFileName.raise_()
        self.btnBrowse.raise_()
        self.tabs.addTab(self.videoTab, "")
        self.cameraTab = QtWidgets.QWidget()
        self.cameraTab.setObjectName("cameraTab")
        self.tabs.addTab(self.cameraTab, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 804, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.state = "play"

        self.retranslateUi(MainWindow)
        self.tabs.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
    def btnForwardClicked(self):
        if self.state == "play":
              self.state = "pause"
        else:
              self.state = "play"
    def openFileDialog(self):
        filename = QFileDialog.getOpenFileName(self.videoTab,"Open Video File", "", "Video Files (*.mp4 *.avi *.mov *.mkv)")
        if filename:
                self.txtFileName.setText(str(filename[0]))
                name = str(filename[0]).split('/')
                self.gbFile.setTitle(name[len(name)-1])

    def playPauseButton(self):
                if 'play.png' in str(self.btnForward_2.styleSheet()):
                #       self.state = "play"
                      self.btnForward_2.setStyleSheet("border-radius:30px;\n"
        "image: url(:/forward/pause.png);\n"
        "background-color: rgba(0,0,0,200);\n"
"padding:10px;")
                else:
                     self.btnForward_2.setStyleSheet("border-radius:30px;\n"
        "image: url(:/forward/play.png);\n"
        "background-color: rgba(0,0,0,200);\n"
"padding:10px;")
                #      self.state = "pause"
                # self.player = QMediaPlayer()
                # self.video_widget = QVideoWidget()
                # self.player.setVideoOutput(self.video_widget)

                # self.scene.addWidget(self.video_widget)


                # self.media = QMediaContent(QtCore.QUrl.fromLocalFile("hashir.mp4"))
                # self.player.setMedia(self.media)
                # self.player.play()
                while video.isOpened():
                     ret,frame = video.read()
                     if ret is True:
                        if self.state == "play":
                                image = QtGui.QImage(frame, frame.shape[1],frame.shape[0],frame.strides[0],QtGui.QImage.Format_RGB888)
                                pixmap = QtGui.QPixmap.fromImage(image) # Replace "image.jpg" with the path to your image file
                                
                                scene = QtWidgets.QGraphicsScene()
                                scene.addPixmap(pixmap)
                                self.graphicsView.setScene(scene)
                                self.graphicsView.show()
                        key = cv2.waitKey(30) & 0xFF
                        if self.state == "pause":
                                while True:
                                        key = cv2.waitKey(0) & 0xFF
                                        # Press 'r' to resume the video
                                        if self.state == "play":
                                                break
                        if key == ord('q'):
                                break

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.tabs.setToolTip(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-weight:600;\">Video</span></p></body></html>"))
        self.gbFile.setTitle(_translate("MainWindow", "FileName"))
        self.btnBrowse.setText(_translate("MainWindow", "Browse"))
        self.tabs.setTabText(self.tabs.indexOf(self.videoTab), _translate("MainWindow", "Video"))
        self.tabs.setTabText(self.tabs.indexOf(self.cameraTab), _translate("MainWindow", "Camera"))
import res_rc

app = QApplication(sys.argv)
window = QMainWindow()
window.setGeometry(200,200,801,581)
window.setWindowTitle("Falcon Video Player")

win = Ui_MainWindow()
win.setupUi(window)

window.show()
sys.exit(app.exec_())